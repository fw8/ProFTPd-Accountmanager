#-----------------------------------------------------------------------
# Server Configuration: those parameters cannot be elsewhere
#-----------------------------------------------------------------------
ServerName "FTP server"
ServerType standalone
UseIPv6 off
MaxInstances 30
DefaultServer   off
Port            0

<Global>
    #-----------------------------------------------------------------------
    # Generic Configuration
    #-----------------------------------------------------------------------
    MaxLoginAttempts 6
    DefaultRoot ~
    Umask 022
    AllowOverwrite on
    User nobody
    Group nogroup
    RequireValidShell off
    WtmpLog off

    PassivePorts 60000 60100

    CreateHome on

    <IfModule mod_sql.c>
        SQLBackend mysql

        AuthOrder mod_sql.c
        SQLAuthTypes Crypt
        SQLAuthenticate users* groups*

        # We need our "default" connection to the userdb database
        SQLConnectInfo proftpd@db:3306 %{env:MYSQL_USER} %{env:MYSQL_PASSWORD}

        # Now that we have a default connection, we can create another connection, named "logdb" and using the "mysql" backend, to the logdb database
        #SQLNamedConnectInfo logdb mysql proftpd@db:3306 proftpd NFvFPGht

        # Point mod_sql at our users/groups tables
        SQLUserInfo users id passwd uid gid homedir shell
        SQLUserWhereClause "enabled = TRUE AND deleted = FALSE"

        SQLGroupInfo groups groupname gid members

        # Update number of connection
        SQLLog PASS updatecount IGNORE_ERRORS
        SQLNamedQuery updatecount UPDATE "count=count+1, last_accessed=now() WHERE id='%u'" users

        # Update the users.last_accessed column on successful login in the userdb
        SQLLog PASS last_accessed IGNORE_ERRORS
        SQLNamedQuery last_accessed UPDATE "last_accessed = NOW() WHERE id='%u'" users

        # Add a row to the login_history table on successful login in the logdb
        SQLLog PASS log_sess IGNORE_ERRORS
        SQLNamedQuery log_sess INSERT "'%u', '%a', '%V', '%{protocol}', NOW()" login_history

        # log the name of any file stored or retrieved, the number of bytes transferred, the user and host doing the transfer, and the time of transfer
        SQLLog RETR,STOR,DELE logtransfer IGNORE_ERRORS
        SQLNamedQuery logtransfer INSERT "'%u', '%a', '%{protocol}', '%m', '%F', %b, now()" transfer_history

        # SQLLogFile /var/log/sql.log

    </IfModule>

    # Deny write ops to read only group "ro"
    <Limit WRITE>
        DenyGroup ro
    </Limit>

</Global>

# -----------------------------------------------------------------------------
# ftp/ftpES Configuration
# -----------------------------------------------------------------------------
<VirtualHost 0.0.0.0>
    Port 21
#TLSEngine                    on
#TLSLog                       /var/log/proftpd/tls.log
#TLSProtocol                  TLSv1.2
#TLSRSACertificateFile                /etc/ssl/cert.pem
#TLSRSACertificateKeyFile             /etc/ssl/key.pem
</VirtualHost>

# -----------------------------------------------------------------------------
# sftp Configuration
# -----------------------------------------------------------------------------
<IfModule mod_sftp.c>
    <VirtualHost 0.0.0.0>
        SFTPEngine on
        Port 22

        SFTPHostKey /etc/ssh/ssh_host_rsa_key
        SFTPHostKey /etc/ssh/ssh_host_dsa_key

        SFTPAuthMethods password

        SFTPAuthorizedUserKeys file:/etc/proftpd/authorized_keys/%u

        # Enable compression
        SFTPCompression delayed

        #IgnoreSCPUploadPerms
        #IgnoreSFTPSetExtendedAttributes
        #IgnoreSFTPSetOwners
        # *IgnoreSFTPSetPerms*

    </VirtualHost>
</IfModule>
